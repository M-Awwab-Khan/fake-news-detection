{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9165799,"sourceType":"datasetVersion","datasetId":5538222}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-14T12:39:38.940762Z","iopub.execute_input":"2024-08-14T12:39:38.941167Z","iopub.status.idle":"2024-08-14T12:39:40.279543Z","shell.execute_reply.started":"2024-08-14T12:39:38.941135Z","shell.execute_reply":"2024-08-14T12:39:40.278304Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Understanding the Dataset","metadata":{}},{"cell_type":"markdown","source":"## Loading the Data","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv('/kaggle/input/news-classification-data/news.csv')","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:39:43.176447Z","iopub.execute_input":"2024-08-14T12:39:43.177143Z","iopub.status.idle":"2024-08-14T12:39:44.266403Z","shell.execute_reply.started":"2024-08-14T12:39:43.177096Z","shell.execute_reply":"2024-08-14T12:39:44.265077Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Exploration","metadata":{}},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:39:49.536702Z","iopub.execute_input":"2024-08-14T12:39:49.537441Z","iopub.status.idle":"2024-08-14T12:39:49.562286Z","shell.execute_reply.started":"2024-08-14T12:39:49.537403Z","shell.execute_reply":"2024-08-14T12:39:49.561089Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"So, essentially the data has 3 columns namely, title, text and label which is our target column. The Unnamed: 0 column is useless","metadata":{}},{"cell_type":"code","source":"df.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:39:53.336939Z","iopub.execute_input":"2024-08-14T12:39:53.337353Z","iopub.status.idle":"2024-08-14T12:39:53.345167Z","shell.execute_reply.started":"2024-08-14T12:39:53.337320Z","shell.execute_reply":"2024-08-14T12:39:53.343549Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:39:54.132948Z","iopub.execute_input":"2024-08-14T12:39:54.133332Z","iopub.status.idle":"2024-08-14T12:39:54.163012Z","shell.execute_reply.started":"2024-08-14T12:39:54.133302Z","shell.execute_reply":"2024-08-14T12:39:54.161739Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Fortunately, there are no null values. Let's remove the Unnamed: 0 column","metadata":{}},{"cell_type":"code","source":"df.drop(columns=['Unnamed: 0'], inplace=True)\ndf.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:39:58.249878Z","iopub.execute_input":"2024-08-14T12:39:58.250314Z","iopub.status.idle":"2024-08-14T12:39:58.261298Z","shell.execute_reply.started":"2024-08-14T12:39:58.250279Z","shell.execute_reply":"2024-08-14T12:39:58.260132Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.sample(10)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:39:58.805260Z","iopub.execute_input":"2024-08-14T12:39:58.805656Z","iopub.status.idle":"2024-08-14T12:39:58.823052Z","shell.execute_reply.started":"2024-08-14T12:39:58.805625Z","shell.execute_reply":"2024-08-14T12:39:58.821799Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import seaborn as sns\nimport matplotlib.pyplot as plt","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:39:59.331726Z","iopub.execute_input":"2024-08-14T12:39:59.332151Z","iopub.status.idle":"2024-08-14T12:40:00.008339Z","shell.execute_reply.started":"2024-08-14T12:39:59.332118Z","shell.execute_reply":"2024-08-14T12:40:00.006619Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df[df['label'] == 'REAL'].describe()","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:05.472236Z","iopub.execute_input":"2024-08-14T12:40:05.473266Z","iopub.status.idle":"2024-08-14T12:40:05.498078Z","shell.execute_reply.started":"2024-08-14T12:40:05.473222Z","shell.execute_reply":"2024-08-14T12:40:05.496729Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df[df['label'] == 'FAKE'].describe()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Count the occurrences of each label\nlabel_counts = df['label'].value_counts()\n\n# Plotting the pie chart\nplt.figure(figsize=(8, 8))\nplt.pie(label_counts, labels=label_counts.index, autopct='%1.1f%%', startangle=140, \n        colors=['blue', 'red'], explode=(0.1, 0), shadow=True)\n\nplt.title('Distribution of REAL and FAKE News')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:00.010528Z","iopub.execute_input":"2024-08-14T12:40:00.010924Z","iopub.status.idle":"2024-08-14T12:40:00.293169Z","shell.execute_reply.started":"2024-08-14T12:40:00.010890Z","shell.execute_reply":"2024-08-14T12:40:00.291378Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"The distribution of labels seems to be balanced which is a good thing for model development.","metadata":{}},{"cell_type":"markdown","source":"### Analyzing Lengths of Texts Across both Classes","metadata":{}},{"cell_type":"markdown","source":"let's make two separate columns for number of words in title and number of words in text","metadata":{}},{"cell_type":"code","source":"def get_word_length(text):\n    return len(text.split(' '))\n\ndf['n_words_title'] = df['title'].apply(get_word_length)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:04.873498Z","iopub.execute_input":"2024-08-14T12:40:04.873927Z","iopub.status.idle":"2024-08-14T12:40:04.892829Z","shell.execute_reply.started":"2024-08-14T12:40:04.873894Z","shell.execute_reply":"2024-08-14T12:40:04.891531Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['n_words_text'] = df['text'].apply(get_word_length)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:05.142965Z","iopub.execute_input":"2024-08-14T12:40:05.143744Z","iopub.status.idle":"2024-08-14T12:40:05.469903Z","shell.execute_reply.started":"2024-08-14T12:40:05.143706Z","shell.execute_reply":"2024-08-14T12:40:05.468632Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"lets analyze the difference in number of words in text","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(12, 6))\n\n# Histogram for n_words_title\nsns.histplot(data=df, x='n_words_title', hue='label', kde=False, \n             palette={'REAL': 'blue', 'FAKE': 'red'}, bins=30, element='step')\n\nplt.title('Distribution of Number of Words in Title (Real vs Fake News)')\nplt.xlabel('Number of Words in Title')\nplt.ylabel('Frequency')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:05.742353Z","iopub.execute_input":"2024-08-14T12:40:05.742760Z","iopub.status.idle":"2024-08-14T12:40:06.263494Z","shell.execute_reply.started":"2024-08-14T12:40:05.742730Z","shell.execute_reply":"2024-08-14T12:40:06.261947Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"There seems to be a slight trend of high number of words in FAKE news as compared to REAL news. Let's verify this by finding averages across two classes.","metadata":{}},{"cell_type":"code","source":"df.groupby('label').agg({'n_words_title': 'mean', 'n_words_text': 'mean'}).reset_index()","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:09.692502Z","iopub.execute_input":"2024-08-14T12:40:09.692929Z","iopub.status.idle":"2024-08-14T12:40:09.713710Z","shell.execute_reply.started":"2024-08-14T12:40:09.692895Z","shell.execute_reply":"2024-08-14T12:40:09.711474Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Fake news tend to have few more words in title and they are shorter in description, while opposite goes for real news.","metadata":{}},{"cell_type":"markdown","source":"let's do the same thing with number of words in news text.","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(12, 6))\n\n# Histogram for n_words_text\nsns.histplot(data=df, x='n_words_text', hue='label', kde=False, \n             palette={'REAL': 'blue', 'FAKE': 'red'}, bins=30, element='step', log_scale=True)\n\nplt.title('Distribution of Number of Words in Text (Real vs Fake News)')\nplt.xlabel('Number of Words in Text')\nplt.ylabel('Frequency')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:12.598048Z","iopub.execute_input":"2024-08-14T12:40:12.598985Z","iopub.status.idle":"2024-08-14T12:40:13.401298Z","shell.execute_reply.started":"2024-08-14T12:40:12.598947Z","shell.execute_reply":"2024-08-14T12:40:13.400074Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Analyzing Most Frequent Words Across both Classes","metadata":{}},{"cell_type":"code","source":"from wordcloud import WordCloud","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:13.403339Z","iopub.execute_input":"2024-08-14T12:40:13.403711Z","iopub.status.idle":"2024-08-14T12:40:13.478436Z","shell.execute_reply.started":"2024-08-14T12:40:13.403681Z","shell.execute_reply":"2024-08-14T12:40:13.477125Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"real_titles = df[df['label'] == 'REAL']['title'].str.cat(sep=' ')\nfake_titles = df[df['label'] == 'FAKE']['title'].str.cat(sep=' ')\nreal_texts = df[df['label'] == 'REAL']['text'].str.cat(sep=' ')\nfake_texts = df[df['label'] == 'FAKE']['text'].str.cat(sep=' ')","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:13.479711Z","iopub.execute_input":"2024-08-14T12:40:13.480262Z","iopub.status.idle":"2024-08-14T12:40:13.585671Z","shell.execute_reply.started":"2024-08-14T12:40:13.480229Z","shell.execute_reply":"2024-08-14T12:40:13.584482Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def generate_wordcloud(text, title):\n    wordcloud = WordCloud(width=800, height=400, background_color='white', max_words=100).generate(text)\n    plt.figure(figsize=(10, 5))\n    plt.imshow(wordcloud, interpolation='bilinear')\n    plt.title(title, fontsize=16)\n    plt.axis('off')\n    plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:13.621273Z","iopub.execute_input":"2024-08-14T12:40:13.621671Z","iopub.status.idle":"2024-08-14T12:40:13.628508Z","shell.execute_reply.started":"2024-08-14T12:40:13.621638Z","shell.execute_reply":"2024-08-14T12:40:13.627218Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"generate_wordcloud(real_titles, 'Most Frequent Words in Titles of REAL News')","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:13.859832Z","iopub.execute_input":"2024-08-14T12:40:13.860614Z","iopub.status.idle":"2024-08-14T12:40:15.080115Z","shell.execute_reply.started":"2024-08-14T12:40:13.860576Z","shell.execute_reply":"2024-08-14T12:40:15.078937Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"generate_wordcloud(fake_titles, 'Most Frequent Words in Titles of FAKE News')","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:15.082314Z","iopub.execute_input":"2024-08-14T12:40:15.082710Z","iopub.status.idle":"2024-08-14T12:40:16.215339Z","shell.execute_reply.started":"2024-08-14T12:40:15.082676Z","shell.execute_reply":"2024-08-14T12:40:16.213946Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"generate_wordcloud(real_texts, 'Most Frequent Words in Text of REAL News')","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:16.216667Z","iopub.execute_input":"2024-08-14T12:40:16.217038Z","iopub.status.idle":"2024-08-14T12:40:31.553224Z","shell.execute_reply.started":"2024-08-14T12:40:16.217001Z","shell.execute_reply":"2024-08-14T12:40:31.552080Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"generate_wordcloud(fake_texts, 'Most Frequent Words in Text of FAKE News')","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:31.555917Z","iopub.execute_input":"2024-08-14T12:40:31.556388Z","iopub.status.idle":"2024-08-14T12:40:43.961613Z","shell.execute_reply.started":"2024-08-14T12:40:31.556347Z","shell.execute_reply":"2024-08-14T12:40:43.960305Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"There doesn't seem to be any pattern in REAL or FAKE News","metadata":{}},{"cell_type":"markdown","source":"# Data Preprocessing","metadata":{}},{"cell_type":"markdown","source":"## Text Cleaning","metadata":{}},{"cell_type":"code","source":"import string\nimport re\nimport nltk\nfrom nltk.corpus import stopwords","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:55.089254Z","iopub.execute_input":"2024-08-14T12:40:55.089661Z","iopub.status.idle":"2024-08-14T12:40:56.207738Z","shell.execute_reply.started":"2024-08-14T12:40:55.089628Z","shell.execute_reply":"2024-08-14T12:40:56.206488Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"nltk.download('stopwords')\nstop_words = set(stopwords.words('english'))\nnltk.download('punkt')","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:40:58.111313Z","iopub.execute_input":"2024-08-14T12:40:58.111730Z","iopub.status.idle":"2024-08-14T12:40:58.278820Z","shell.execute_reply.started":"2024-08-14T12:40:58.111699Z","shell.execute_reply":"2024-08-14T12:40:58.277426Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def clean_text(text):\n    # remove punctuation and special characters\n    text = re.sub(f'[{string.punctuation}]', '', text)\n    \n    # remove numbers\n    text = re.sub(r'\\d+', '', text)\n    \n    # convert to lowercase\n    text = text.lower()\n    \n    # remove stopwords\n    text = ' '.join([word for word in text.split() if word not in stop_words])\n    \n    return text","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:41:04.617818Z","iopub.execute_input":"2024-08-14T12:41:04.618267Z","iopub.status.idle":"2024-08-14T12:41:04.625578Z","shell.execute_reply.started":"2024-08-14T12:41:04.618231Z","shell.execute_reply":"2024-08-14T12:41:04.624275Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['clean_title'] = df['title'].apply(clean_text)\ndf['clean_text'] = df['text'].apply(clean_text)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:41:07.292925Z","iopub.execute_input":"2024-08-14T12:41:07.294014Z","iopub.status.idle":"2024-08-14T12:41:10.826194Z","shell.execute_reply.started":"2024-08-14T12:41:07.293977Z","shell.execute_reply":"2024-08-14T12:41:10.824935Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df[['title', 'clean_title', 'text', 'clean_text']].head()","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:41:12.790204Z","iopub.execute_input":"2024-08-14T12:41:12.790629Z","iopub.status.idle":"2024-08-14T12:41:12.807480Z","shell.execute_reply.started":"2024-08-14T12:41:12.790597Z","shell.execute_reply":"2024-08-14T12:41:12.806207Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.drop(columns=['title', 'text'], inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:41:15.390542Z","iopub.execute_input":"2024-08-14T12:41:15.390952Z","iopub.status.idle":"2024-08-14T12:41:15.399906Z","shell.execute_reply.started":"2024-08-14T12:41:15.390914Z","shell.execute_reply":"2024-08-14T12:41:15.398586Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Tokenization","metadata":{}},{"cell_type":"code","source":"df['tokenized_title'] = df['clean_title'].apply(nltk.word_tokenize)\ndf['tokenized_text'] = df['clean_text'].apply(nltk.word_tokenize)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:41:20.074821Z","iopub.execute_input":"2024-08-14T12:41:20.075270Z","iopub.status.idle":"2024-08-14T12:41:54.403517Z","shell.execute_reply.started":"2024-08-14T12:41:20.075235Z","shell.execute_reply":"2024-08-14T12:41:54.402375Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df[['tokenized_title', 'tokenized_text']].head()","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:41:54.405965Z","iopub.execute_input":"2024-08-14T12:41:54.406706Z","iopub.status.idle":"2024-08-14T12:41:54.436911Z","shell.execute_reply.started":"2024-08-14T12:41:54.406659Z","shell.execute_reply":"2024-08-14T12:41:54.435258Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Lemmatization","metadata":{}},{"cell_type":"code","source":"!python3 -m nltk.downloader wordnet\n!unzip /usr/share/nltk_data/corpora/wordnet.zip -d /usr/share/nltk_data/corpora/","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:42:02.898660Z","iopub.execute_input":"2024-08-14T12:42:02.899112Z","iopub.status.idle":"2024-08-14T12:42:07.042270Z","shell.execute_reply.started":"2024-08-14T12:42:02.899077Z","shell.execute_reply":"2024-08-14T12:42:07.040813Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from nltk.stem import WordNetLemmatizer\nlemmatizer = WordNetLemmatizer()\n\ndef lemmatize(text):\n    return [lemmatizer.lemmatize(token) for token in text]","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:42:10.195476Z","iopub.execute_input":"2024-08-14T12:42:10.196123Z","iopub.status.idle":"2024-08-14T12:42:10.205070Z","shell.execute_reply.started":"2024-08-14T12:42:10.196075Z","shell.execute_reply":"2024-08-14T12:42:10.203630Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['tokenized_title'] = df['tokenized_title'].apply(lemmatize)\ndf['tokenized_text'] = df['tokenized_text'].apply(lemmatize)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:42:11.334966Z","iopub.execute_input":"2024-08-14T12:42:11.335571Z","iopub.status.idle":"2024-08-14T12:42:35.853612Z","shell.execute_reply.started":"2024-08-14T12:42:11.335534Z","shell.execute_reply":"2024-08-14T12:42:35.852320Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:42:37.614195Z","iopub.execute_input":"2024-08-14T12:42:37.614612Z","iopub.status.idle":"2024-08-14T12:42:37.639640Z","shell.execute_reply.started":"2024-08-14T12:42:37.614579Z","shell.execute_reply":"2024-08-14T12:42:37.638243Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df['clean_title'] = df['tokenized_title'].apply(lambda lst: ' '.join(lst))\ndf['clean_text'] = df['tokenized_text'].apply(lambda lst: ' '.join(lst))","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:42:42.844926Z","iopub.execute_input":"2024-08-14T12:42:42.845390Z","iopub.status.idle":"2024-08-14T12:42:43.037324Z","shell.execute_reply.started":"2024-08-14T12:42:42.845354Z","shell.execute_reply":"2024-08-14T12:42:43.035841Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.drop(columns=['tokenized_title', 'tokenized_text'], inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:42:44.246229Z","iopub.execute_input":"2024-08-14T12:42:44.246627Z","iopub.status.idle":"2024-08-14T12:42:44.256013Z","shell.execute_reply.started":"2024-08-14T12:42:44.246598Z","shell.execute_reply":"2024-08-14T12:42:44.254478Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:45:57.356067Z","iopub.execute_input":"2024-08-14T12:45:57.356536Z","iopub.status.idle":"2024-08-14T12:45:57.372669Z","shell.execute_reply.started":"2024-08-14T12:45:57.356494Z","shell.execute_reply":"2024-08-14T12:45:57.371441Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Feature Extraction","metadata":{}},{"cell_type":"code","source":"from sklearn.feature_extraction.text import TfidfVectorizer\n\ndf['title_text'] = df['clean_title'] + ' ' + df['clean_text']\n\ntfidf_vectorizer = TfidfVectorizer(max_features=5000, ngram_range=(1, 2))  \ntfidf_features = tfidf_vectorizer.fit_transform(df['title_text'])\ntfidf_df = pd.DataFrame(tfidf_features.toarray(), columns=tfidf_vectorizer.get_feature_names_out())\n\ntfidf_df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:54:06.455467Z","iopub.execute_input":"2024-08-14T12:54:06.455925Z","iopub.status.idle":"2024-08-14T12:54:25.007087Z","shell.execute_reply.started":"2024-08-14T12:54:06.455891Z","shell.execute_reply":"2024-08-14T12:54:25.005941Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Model Building","metadata":{}},{"cell_type":"markdown","source":"## Splitting the Data","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nfrom sklearn.preprocessing import LabelEncoder\n\nlabel_encoder = LabelEncoder()\ndf['label_encoded'] = label_encoder.fit_transform(df['label'])  # Assuming 'label' is the target column\n\nX = tfidf_df \ny = df['label_encoded']  \n\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)  # Adjust test_size as needed","metadata":{"execution":{"iopub.status.busy":"2024-08-14T12:55:37.374613Z","iopub.execute_input":"2024-08-14T12:55:37.375651Z","iopub.status.idle":"2024-08-14T12:55:37.515671Z","shell.execute_reply.started":"2024-08-14T12:55:37.375514Z","shell.execute_reply":"2024-08-14T12:55:37.514158Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Display the shapes of the resulting datasets\nprint(f\"Training Features Shape: {X_train.shape}\")\nprint(f\"Test Features Shape: {X_test.shape}\")\nprint(f\"Training Labels Shape: {y_train.shape}\")\nprint(f\"Test Labels Shape: {y_test.shape}\")","metadata":{"execution":{"iopub.status.busy":"2024-08-14T13:01:54.164850Z","iopub.execute_input":"2024-08-14T13:01:54.165289Z","iopub.status.idle":"2024-08-14T13:01:54.172284Z","shell.execute_reply.started":"2024-08-14T13:01:54.165251Z","shell.execute_reply":"2024-08-14T13:01:54.171047Z"},"trusted":true},"execution_count":41,"outputs":[{"name":"stdout","text":"Training Features Shape: (5068, 5000)\nTest Features Shape: (1267, 5000)\nTraining Labels Shape: (5068,)\nTest Labels Shape: (1267,)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Training and Evaluation","metadata":{}},{"cell_type":"code","source":"from sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\nfrom sklearn.naive_bayes import GaussianNB\nfrom sklearn.svm import SVC\nfrom sklearn.linear_model import LogisticRegression, PassiveAggressiveClassifier\nfrom sklearn.neighbors import KNeighborsClassifier\nfrom sklearn.neural_network import MLPClassifier","metadata":{"execution":{"iopub.status.busy":"2024-08-14T13:08:21.976469Z","iopub.execute_input":"2024-08-14T13:08:21.976922Z","iopub.status.idle":"2024-08-14T13:08:22.159795Z","shell.execute_reply.started":"2024-08-14T13:08:21.976873Z","shell.execute_reply":"2024-08-14T13:08:22.158522Z"},"trusted":true},"execution_count":42,"outputs":[]},{"cell_type":"code","source":"# List of models to evaluate\nmodels = {\n    \"Decision Tree\": DecisionTreeClassifier(),\n    \"Random Forest\": RandomForestClassifier(),\n    \"Naive Bayes\": GaussianNB(),\n    \"SVM\": SVC(probability=True),\n    \"Logistic Regression\": LogisticRegression(),\n    \"K-Nearest Neighbour\": KNeighborsClassifier(),\n    \"Gradient Boosting\": GradientBoostingClassifier(),\n    \"Passive Aggressive\": PassiveAggressiveClassifier(),\n    \"Neural Network (1 layer)\": MLPClassifier(hidden_layer_sizes=(10,), max_iter=500),\n    \"DNN (5 hidden layers)\": MLPClassifier(hidden_layer_sizes=(64, 64, 32, 32, 16), max_iter=500)\n}","metadata":{"execution":{"iopub.status.busy":"2024-08-14T13:09:02.565833Z","iopub.execute_input":"2024-08-14T13:09:02.566317Z","iopub.status.idle":"2024-08-14T13:09:02.574618Z","shell.execute_reply.started":"2024-08-14T13:09:02.566282Z","shell.execute_reply":"2024-08-14T13:09:02.573205Z"},"trusted":true},"execution_count":43,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import confusion_matrix, f1_score, recall_score, roc_auc_score, roc_curve, auc\n\ndef evaluate_model(model, X_train, X_test, y_train, y_test):\n    model.fit(X_train, y_train)\n    y_pred = model.predict(X_test)\n    y_prob = model.predict_proba(X_test)[:, 1] if hasattr(model, \"predict_proba\") else None\n    \n    cm = confusion_matrix(y_test, y_pred)\n    \n    f1 = f1_score(y_test, y_pred)\n    recall = recall_score(y_test, y_pred)\n    roc_auc = roc_auc_score(y_test, y_prob) if y_prob is not None else np.nan\n    \n    if y_prob is not None:\n        fpr, tpr, _ = roc_curve(y_test, y_prob)\n        roc_auc_value = auc(fpr, tpr)\n    else:\n        fpr, tpr, roc_auc_value = None, None, None\n    \n    return {\n        \"confusion_matrix\": cm,\n        \"f1_score\": f1,\n        \"recall\": recall,\n        \"roc_auc\": roc_auc,\n        \"fpr\": fpr,\n        \"tpr\": tpr,\n        \"roc_auc_value\": roc_auc_value\n    }","metadata":{"execution":{"iopub.status.busy":"2024-08-14T13:12:39.491948Z","iopub.execute_input":"2024-08-14T13:12:39.492392Z","iopub.status.idle":"2024-08-14T13:12:39.503003Z","shell.execute_reply.started":"2024-08-14T13:12:39.492358Z","shell.execute_reply":"2024-08-14T13:12:39.501712Z"},"trusted":true},"execution_count":46,"outputs":[]},{"cell_type":"code","source":"results = {}\n\nfor model_name, model in models.items():\n    print(f\"Evaluating {model_name}...\")\n    results[model_name] = evaluate_model(model, X_train, X_test, y_train, y_test)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T13:12:41.169084Z","iopub.execute_input":"2024-08-14T13:12:41.169512Z","iopub.status.idle":"2024-08-14T13:23:21.828921Z","shell.execute_reply.started":"2024-08-14T13:12:41.169476Z","shell.execute_reply":"2024-08-14T13:23:21.827136Z"},"trusted":true},"execution_count":47,"outputs":[{"name":"stdout","text":"Evaluating Decision Tree...\nEvaluating Random Forest...\nEvaluating Naive Bayes...\nEvaluating SVM...\nEvaluating Logistic Regression...\nEvaluating K-Nearest Neighbour...\nEvaluating Gradient Boosting...\nEvaluating Passive Aggressive...\nEvaluating Neural Network (1 layer)...\nEvaluating DNN (5 hidden layers)...\n","output_type":"stream"}]},{"cell_type":"code","source":"results_df = pd.DataFrame.from_dict({\n    model_name: {\n        \"F1 Score\": result[\"f1_score\"],\n        \"Recall\": result[\"recall\"],\n        \"ROC AUC\": result[\"roc_auc\"]\n    }\n    for model_name, result in results.items()\n}, orient='index')\n","metadata":{"execution":{"iopub.status.busy":"2024-08-14T13:24:33.052417Z","iopub.execute_input":"2024-08-14T13:24:33.052853Z","iopub.status.idle":"2024-08-14T13:24:33.062464Z","shell.execute_reply.started":"2024-08-14T13:24:33.052818Z","shell.execute_reply":"2024-08-14T13:24:33.061060Z"},"trusted":true},"execution_count":48,"outputs":[]},{"cell_type":"code","source":"results_df","metadata":{"execution":{"iopub.status.busy":"2024-08-14T13:24:38.756427Z","iopub.execute_input":"2024-08-14T13:24:38.756826Z","iopub.status.idle":"2024-08-14T13:24:38.773670Z","shell.execute_reply.started":"2024-08-14T13:24:38.756795Z","shell.execute_reply":"2024-08-14T13:24:38.772347Z"},"trusted":true},"execution_count":49,"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"                          F1 Score    Recall   ROC AUC\nDecision Tree             0.811393  0.824726  0.806471\nRandom Forest             0.917258  0.910798  0.977231\nNaive Bayes               0.884735  0.888889  0.899867\nSVM                       0.936407  0.921753  0.987099\nLogistic Regression       0.924051  0.913928  0.980142\nK-Nearest Neighbour       0.866715  0.931142  0.933120\nGradient Boosting         0.898089  0.882629  0.970311\nPassive Aggressive        0.926070  0.931142       NaN\nNeural Network (1 layer)  0.938521  0.943662  0.984293\nDNN (5 hidden layers)     0.922957  0.928013  0.978714","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>F1 Score</th>\n      <th>Recall</th>\n      <th>ROC AUC</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Decision Tree</th>\n      <td>0.811393</td>\n      <td>0.824726</td>\n      <td>0.806471</td>\n    </tr>\n    <tr>\n      <th>Random Forest</th>\n      <td>0.917258</td>\n      <td>0.910798</td>\n      <td>0.977231</td>\n    </tr>\n    <tr>\n      <th>Naive Bayes</th>\n      <td>0.884735</td>\n      <td>0.888889</td>\n      <td>0.899867</td>\n    </tr>\n    <tr>\n      <th>SVM</th>\n      <td>0.936407</td>\n      <td>0.921753</td>\n      <td>0.987099</td>\n    </tr>\n    <tr>\n      <th>Logistic Regression</th>\n      <td>0.924051</td>\n      <td>0.913928</td>\n      <td>0.980142</td>\n    </tr>\n    <tr>\n      <th>K-Nearest Neighbour</th>\n      <td>0.866715</td>\n      <td>0.931142</td>\n      <td>0.933120</td>\n    </tr>\n    <tr>\n      <th>Gradient Boosting</th>\n      <td>0.898089</td>\n      <td>0.882629</td>\n      <td>0.970311</td>\n    </tr>\n    <tr>\n      <th>Passive Aggressive</th>\n      <td>0.926070</td>\n      <td>0.931142</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>Neural Network (1 layer)</th>\n      <td>0.938521</td>\n      <td>0.943662</td>\n      <td>0.984293</td>\n    </tr>\n    <tr>\n      <th>DNN (5 hidden layers)</th>\n      <td>0.922957</td>\n      <td>0.928013</td>\n      <td>0.978714</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"### 1. **Overall Performance Overview**\n   - **F1 Score** and **Recall** are relatively high across most models, indicating that the classifiers are performing well in both precision and recall.\n   - **ROC AUC** values are also high for most models, suggesting that these classifiers have good discriminatory power between the classes (REAL vs. FAKE news).\n\n### 2. **Top Performers**\n   - **Support Vector Machine (SVM):**\n     - **F1 Score:** 0.936407\n     - **Recall:** 0.921753\n     - **ROC AUC:** 0.987099\n     - **Analysis:** SVM has the highest ROC AUC, indicating excellent classification performance. It also has a strong balance between precision and recall, making it a top performer.\n   \n   - **Neural Network (1 layer):**\n     - **F1 Score:** 0.938521\n     - **Recall:** 0.943662\n     - **ROC AUC:** 0.984293\n     - **Analysis:** This model has the highest Recall and F1 Score, meaning it is particularly effective at identifying true positives (REAL news). It also has a very high ROC AUC, showing good model performance overall.\n   \n   - **Random Forest:**\n     - **F1 Score:** 0.917258\n     - **Recall:** 0.910798\n     - **ROC AUC:** 0.977231\n     - **Analysis:** The Random Forest model is another strong performer with a high ROC AUC and solid precision and recall. It's a good choice for balanced performance.\n\n### 3. **Middle Performers**\n   - **Logistic Regression:**\n     - **F1 Score:** 0.924051\n     - **Recall:** 0.913928\n     - **ROC AUC:** 0.980142\n     - **Analysis:** Logistic Regression shows good performance with a high ROC AUC. It balances recall and precision well, making it a reliable choice.\n\n   - **DNN (5 hidden layers):**\n     - **F1 Score:** 0.922957\n     - **Recall:** 0.928013\n     - **ROC AUC:** 0.978714\n     - **Analysis:** This deeper neural network performs similarly to Logistic Regression but with slightly better Recall. It also has a high ROC AUC, making it a strong option for this classification task.\n\n   - **Gradient Boosting:**\n     - **F1 Score:** 0.898089\n     - **Recall:** 0.882629\n     - **ROC AUC:** 0.970311\n     - **Analysis:** Gradient Boosting shows solid performance with good ROC AUC. However, it has a slightly lower Recall compared to the top performers.\n\n   - **Naive Bayes:**\n     - **F1 Score:** 0.884735\n     - **Recall:** 0.888889\n     - **ROC AUC:** 0.899867\n     - **Analysis:** Naive Bayes is slightly weaker in ROC AUC compared to other models but still delivers decent performance, especially in Recall.\n\n### 4. **Lower Performers**\n   - **K-Nearest Neighbour (KNN):**\n     - **F1 Score:** 0.866715\n     - **Recall:** 0.931142\n     - **ROC AUC:** 0.933120\n     - **Analysis:** KNN has a high Recall but lower F1 Score and ROC AUC compared to the top models. This suggests that while it captures true positives well, it may struggle with precision (i.e., higher false positives).\n   \n   - **Decision Tree:**\n     - **F1 Score:** 0.811393\n     - **Recall:** 0.824726\n     - **ROC AUC:** 0.806471\n     - **Analysis:** Decision Tree has the lowest performance in all metrics, making it the least effective model in this context. It might be overfitting or too simplistic for the complexity of this task.\n\n### 5. **Special Cases**\n   - **Passive Aggressive Classifier:**\n     - **F1 Score:** 0.926070\n     - **Recall:** 0.931142\n     - **ROC AUC:** NaN\n     - **Analysis:** The Passive Aggressive Classifier shows strong performance in F1 Score and Recall, indicating it is good at handling imbalanced data or online learning scenarios. However, the ROC AUC could not be calculated, likely because this classifier doesn't output probabilities, which are required for ROC curve computation.\n\n### **Conclusion**\n- **Best Models:** SVM and the Neural Network with 1 hidden layer are the best performers overall, with high F1 Score, Recall, and ROC AUC values.\n- **Reliable Models:** Random Forest, Logistic Regression, and the DNN with 5 hidden layers are also strong choices, offering good balance across metrics.\n- **Potential for Improvement:** KNN and Decision Tree could benefit from tuning or more complex implementations to improve their performance.\n- **Use Case-Specific:** Passive Aggressive Classifier might be useful in scenarios where online learning is required or data is highly imbalanced.\n","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(12, 8))\nfor model_name, result in results.items():\n    if result[\"fpr\"] is not None and result[\"tpr\"] is not None:\n        plt.plot(result[\"fpr\"], result[\"tpr\"], label=f'{model_name} (AUC = {result[\"roc_auc_value\"]:.2f})')\n\nplt.plot([0, 1], [0, 1], 'k--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('ROC Curves')\nplt.legend(loc=\"lower right\")\nplt.show()\n\nprint(results_df)","metadata":{"execution":{"iopub.status.busy":"2024-08-14T13:29:53.004143Z","iopub.execute_input":"2024-08-14T13:29:53.004630Z","iopub.status.idle":"2024-08-14T13:29:53.476910Z","shell.execute_reply.started":"2024-08-14T13:29:53.004593Z","shell.execute_reply":"2024-08-14T13:29:53.475719Z"},"trusted":true},"execution_count":50,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1200x800 with 1 Axes>","image/png":""},"metadata":{}},{"name":"stdout","text":"                          F1 Score    Recall   ROC AUC\nDecision Tree             0.811393  0.824726  0.806471\nRandom Forest             0.917258  0.910798  0.977231\nNaive Bayes               0.884735  0.888889  0.899867\nSVM                       0.936407  0.921753  0.987099\nLogistic Regression       0.924051  0.913928  0.980142\nK-Nearest Neighbour       0.866715  0.931142  0.933120\nGradient Boosting         0.898089  0.882629  0.970311\nPassive Aggressive        0.926070  0.931142       NaN\nNeural Network (1 layer)  0.938521  0.943662  0.984293\nDNN (5 hidden layers)     0.922957  0.928013  0.978714\n","output_type":"stream"}]},{"cell_type":"markdown","source":"The metrics could have been improved even further with techniques like hyperparameter tuning, and cross validation to ensure model robustness. ","metadata":{}},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}